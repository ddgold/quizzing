scalar Date

type FormError {
	message: String!
	field: String!
}

# ----
# User
# ----
type User {
	id: String!
	nickname: String!
	email: String!
}

type AuthResult {
	accessToken: String
	user: User
	errors: [FormError!]
}

# -----
# Build
# -----
type Clue {
	answer: String!
	question: String!
}

input ClueInput {
	answer: String!
	question: String!
}

type Category {
	id: String!
	name: String!
	description: String
	clues: [Clue]!
	creator: User!
	created: Date!
}

type CategoryResult {
	result: Category
	errors: [FormError!]
}

type Board {
	id: String!
	name: String!
	creator: User!
	created: Date!
}

type BoardResult {
	result: Board
	errors: [FormError!]
}

# -------
# Queries
# -------
type Query {
	# User
	currentUser: User
	userByEmail(email: String!): User

	# Build
	boards(showAll: Boolean!): [Board!]
	boardById(id: String!): Board
	categories(showAll: Boolean!): [Category!]
	categoryById(id: String!): Category
}

# ---------
# Mutations
# ---------
type Mutation {
	# User
	login(email: String!, password: String!): AuthResult!
	logout: Boolean
	register(nickname: String!, email: String!, password: String!): AuthResult!

	# Build
	createNewBoard(name: String!): BoardResult!
	createCategory(name: String!): CategoryResult!
	updateCategory(id: String!, name: String!, description: String!, clues: [ClueInput!]!): CategoryResult!
}
